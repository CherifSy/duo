#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander');
var max = require('max-component');
var fmt = require('util').format;
var assert = require('assert');
var duo = require('..');
var co = require('co');

/**
 * Program
 */

program
  .usage('duo install')
  .option('-d, --dev', 'install development dependencies')
  .option('-c, --concurrency', 'set the concurrency', 10)
  .parse(process.argv);

/**
 * Examples
 */

program.on('--help', function(){
  console.log('  Examples:');
  console.log();
  console.log('    # install dependencies');
  console.log('    $ duo install');
  console.log();
  console.log('    # install dev dependencies');
  console.log('    $ duo install --dev');
  console.log();
  process.exit(0);
});

/**
 * Install
 */

co(function*(){
  try {
    console.log();
    yield install;
    console.log();
  } catch (e) {
    console.error();
    console.error('  %s', e.stack);
    console.error();
    process.exit(1);
  }
})();

/**
 * Install
 */

function *install(){
  var concurrency = /^infinity$/i.test(program.concurrency)
    ? Infinity
    : parseInt(program.concurrency);

  yield duo.install()
    .directory('components')
    .auth(process.env.GITHUB_USERNAME, process.env.GITHUB_PASSWORD)
    .concurrency(concurrency)
    .development(program.dev)
    .on('install', log('install'))
    .on('installed', log('complete'))
    .install();
}

/**
 * Log
 */

function log(type){
  log.types = log.types || [];
  log.types.push(type);
  return function(pkg){
    var name = pretty(pkg);
    var t = format(type, log.types);
    console.log('  \033[90m%s\033[m : %s', t, name);
  };
}

/**
 * Format type
 */

function format(type, types){
  var m = max(types, '.length');
  var pad = Array(Math.abs(type.length - m) + 1).join(' ');
  return type + pad;
}

/**
 * Pretty pkg name
 */

function pretty(pkg){
  return '\033[36m'
    + pkg.repo
    + '\033[m'
    + '\033[90m@'
    + pkg.resolved
    + '\033[m';
}
